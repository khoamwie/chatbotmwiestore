import {
  createBaseVNode,
  createElementBlock,
  normalizeClass,
  openBlock
} from "./chunk-UKT6457V.js";
import "./chunk-NKHIPFFU.js";

// node_modules/primevue/dataviewlayoutoptions/dataviewlayoutoptions.esm.js
var script = {
  name: "DataViewLayoutOptions",
  emits: ["update:modelValue"],
  props: {
    modelValue: String
  },
  methods: {
    changeLayout(layout) {
      this.$emit("update:modelValue", layout);
    }
  },
  computed: {
    buttonListClass() {
      return ["p-button p-button-icon-only", { "p-highlight": this.modelValue === "list" }];
    },
    buttonGridClass() {
      return ["p-button p-button-icon-only", { "p-highlight": this.modelValue === "grid" }];
    }
  }
};
var _hoisted_1 = { class: "p-dataview-layout-options p-selectbutton p-buttonset" };
var _hoisted_2 = createBaseVNode("i", { class: "pi pi-bars" }, null, -1);
var _hoisted_3 = [
  _hoisted_2
];
var _hoisted_4 = createBaseVNode("i", { class: "pi pi-th-large" }, null, -1);
var _hoisted_5 = [
  _hoisted_4
];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [
    createBaseVNode("button", {
      class: normalizeClass($options.buttonListClass),
      onClick: _cache[0] || (_cache[0] = ($event) => $options.changeLayout("list")),
      type: "button"
    }, _hoisted_3, 2),
    createBaseVNode("button", {
      class: normalizeClass($options.buttonGridClass),
      onClick: _cache[1] || (_cache[1] = ($event) => $options.changeLayout("grid")),
      type: "button"
    }, _hoisted_5, 2)
  ]);
}
script.render = render;
export {
  script as default
};
//# sourceMappingURL=primevue_dataviewlayoutoptions.js.map
